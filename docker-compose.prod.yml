services:
  # Database Service
  postgres:
    image: postgres:15-alpine
    env_file:
      - .env.prd
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-crypto_place_prd}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_prd_data:/var/lib/postgresql/data
    networks:
      - crypto-network-prd
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-crypto_place_prd}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    security_opt:
      - no-new-privileges:true

  # Frontend Service (Production)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
      args:
        - NODE_ENV=${NODE_ENV:-production}
        - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://backend:5001}
        - VITE_API_HOST=${VITE_API_HOST:-/api}
        - VITE_COINGECKO_API_KEY=${VITE_COINGECKO_API_KEY}
    ports:
      - "${FRONTEND_PORT:-3001}:80"
    env_file:
      - .env.prd
    networks:
      - crypto-network-prd
    restart: unless-stopped
    mem_limit: 512m
    mem_reservation: 256m
    cpus: 0.5
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    security_opt:
      - no-new-privileges:true

  # Backend Service (Production)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
      args:
        - NODE_ENV=${NODE_ENV:-production}
    ports:
      - "${BACKEND_PORT:-5001}:5001"
    env_file:
      - .env.prd
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - crypto-network-prd
    restart: unless-stopped
    mem_limit: 2g
    mem_reservation: 1g
    cpus: 2.0
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp

networks:
  crypto-network-prd:
    driver: bridge

volumes:
  postgres_prd_data:
    driver: local
