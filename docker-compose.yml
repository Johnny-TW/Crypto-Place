version: '3.8'

services:
  # Database Service
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: crypto_place
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - crypto-network

  # Frontend Service
  frontend:
    image: ${DOCKER_USERNAME}/crypto-place-frontend:latest
    ports:
      - "3001:5173"
    environment:
      - NODE_ENV=development
    networks:
      - crypto-network
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.2'
          memory: 256M
      placement:
        constraints:
          - node.role == manager

  # Backend Service
  backend:
    image: ${DOCKER_USERNAME}/crypto-place-backend:latest
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/crypto_place?schema=public
    depends_on:
      - postgres
    networks:
      - crypto-network
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      update_config:
        parallelism: 1
        delay: 10s
        failure_action: rollback
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      placement:
        constraints:
          - node.role == manager


networks:
  crypto-network:
    driver: overlay
    attachable: true
    driver_opts:
      encrypted: "true"

volumes:
  postgres_data:
    driver: local
  node_modules_frontend:
    driver: local
  node_modules_backend:
    driver: local
  app_logs:
    driver: local